<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
  <meta name="Title" content="Man page for the nagios plugin check_fail2ban.sh" />
  <meta name="Description" content="nagios plugin manual page for the nagios plugin check_fail2ban.sh" />
  <meta name="Keywords" content="nagios, monitoring, fail2ban.sh, brute-force" />
  <meta name="Classification" content="Nagios plugin manual" />
  <title>Man page for the nagios plugin check_fail2ban.sh</title>
</head>

<body>
<div id="wrapper">
  <div id="banner">
    <h1>check_fail2ban.sh</h1>
    <h2>Man page for the Nagios plugin check_fail2ban.sh</h2>
  </div>
  <div id="content">
  <div id=copyright>Copyright (c) 2015 Frank4DD <support[at]frank4dd.com></div>
  <h3 id=intro>check_fail2ban.sh</h3>
  <hr />
<p>
This plugin checks the number IP blocked by the brute-force protection system fail2ban against warning and critical thresholds.
This gives feedback on the level of ongoing brute-force attacks to the system, and can alert for operational problems with fail2ban.
</p>
<p>
Fail2ban (<a href="http://www.fail2ban.org/wiki/index.php/Main_Page">Link</a>) is a automated response system mitigating brute-force (password) attacks by dynamically updating firewall rules to block offending systems.
</p>
<h3 id=usage>Usage:</h3>
  <hr />
<p>
./check_fail2ban.sh -w &lt;warning-value&gt; -c &lt;critical-value&gt; | -h
</p>

<h3 id=options>Options:</h3>
  <hr />
<p>
-w <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The total number of blocked IP considered for warning </p><p>
-c <br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The total number of blocked IP considered critical</p><p>
-h <br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Displays the plugin usage</p><p>
</p>

<h3 id=pluginexample>Plugin Usage Example:</h3>
  <hr />
<p>Commandline output:</p>
<p>
<pre class=code># /srv/app/nagios/lib/check_fail2ban.sh -w 8 -c 12
OK: 4 banned IP(s) in 2 active jails|banned_IP=4;8;12;;
jail ssh-iptables blocks 3 IP(s): 221.229.166.28 117.40.239.54 221.229.166.98
jail sasl-iptables blocks 1 IP(s): 92.222.17.21
| ssh-iptables=3;;;; sasl-iptables=1;;;;</pre>
</p>
<p>
<p>Nagios plugin call definition in commands.cfg:</p>
<pre><code>define command{
  command_name check_fail2ban
  command_line $USER1$/check_fail2ban.sh -w $ARG1$ -c $ARG2$
}</code></pre>
</p>
<p>Nagios plugin service definition, e.g. security-services.cfg:</p>
<pre><code>#######################################################################
# Check fail2ban blocked IP
#######################################################################
define service {
  use                           generic-security # service defs template
  host_name                     susie
  service_description           fail2ban_blocks
  check_command                 check_fail2ban!8!16
}</code></pre>
</p>

<p>Nagios output:</p>
<p><img src="images/check_fail2ban-example1.png"></p>

<p>Nagios Graph:</p>
<p>Visualizing the number of fail2ban-blocked IP's gives a good measure and feedback about the ongoing amount of brute-force attacks over time.</p>
<p><img src="images/check_fail2ban-example2.png"></p>

  <h3 id=notes>Notes:</h3>
  <hr />
<p>
The plugin uses the fail2ban-client program to retrieve the data. Fail2ban communicates through a named pipe with
the server. The typical location for the pipe is /var/run/fail2ban/fail2ban.sock. Access to this socket
is restricted for root only. Best to add access for the Nagios process through a specific ACL.
</p>
<pre class=code># setfacl -m u:nagios:rwx /var/run/fail2ban/fail2ban.sock

# getfacl /var/run/fail2ban/fail2ban.sock
getfacl: Removing leading '/' from absolute path names
# file: var/run/fail2ban/fail2ban.sock
# owner: root
# group: root
user::rwx
user:nagios:rwx
group::---
mask::rwx
other::---</pre>

</div>
</body></html>
